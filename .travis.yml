language: lisp
dist: xenial
env: PREFIX="$(pwd)/sbcl"
     SBCL_HOME="$(pwd)/sbcl/lib/sbcl"
     SBCL="$(pwd)/sbcl/bin/sbcl"
     SBCL_OPTIONS="--noinform --no-userinit"

install:
  - curl -L "${SBCL_DOWNLOAD_URL}" | tar -xj
  - ( cd sbcl-* && INSTALL_ROOT="${PREFIX}" sh install.sh )

  - curl -o cl "${CL_LAUNCH_DOWNLOAD_URL}"
  - chmod +x cl

  - curl -o quicklisp.lisp "${QUICKLISP_DOWNLOAD_URL}"
  - ./cl -L quicklisp.lisp '(quicklisp-quickstart:install)'

script:
  - (
      cd "${HOME}/quicklisp/local-projects"
        && git clone https://github.com/scymtym/cl-protobuf
        && git clone https://github.com/scymtym/serialization.protocol-buffer
        && git clone https://github.com/scymtym/network.spread
        && git clone https://github.com/open-rsx/rsb-cl
    )
  - ./cl
      -S '(:source-registry (:directory "'$(pwd)'") :ignore-inherited-configuration)'
      -Q
      -s cl-protobuf
      -s rsb-formatting-json
      -s rsb-formatting-png
      -s rsb-formatting/test
      -s rsb-tools-common/test
      -s rsb-stats/test
      -s rsb-tools-commands/test
      -s rsb-tools-commands-web/test
      '(or (mapc (function asdf:test-system)
                 (list :rsb-formatting/test
                       :rsb-tools-common/test
                       :rsb-stats/test
                       :rsb-tools-commands/test
                       :rsb-tools-commands-web/test))
            (uiop:quit -1))'
  - ./cl
      -S '(:source-registry (:directory "'$(pwd)'") :ignore-inherited-configuration)'
      -Q
      -s rsb-converter-protocol-buffer
      -s rsb-filter-regex
      -s rsb-filter-xpath
      -s rsb-transport-inprocess
      -s rsb-transport-socket
      -s rsb-transport-spread
      -s rsb-formatting-json
      -s rsb-formatting-png
      -s rsb-tools-commands-web
      -s rsb-tools-commands-web-resources
      -s rsb-tools-main
      --dump ! --output rsb-tools -r "rsb-tools:main"
